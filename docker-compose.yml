version: '3.8'

# ============================================================================
# OpenGristAI - Development Docker Compose
# ============================================================================
#
# Pour le dÃ©veloppement local avec hot-reload.
# Build les images localement et monte les volumes pour le live-reload.
#
# USAGE:
#   docker-compose up -d
#
# Pour la production avec images Docker Hub, utilisez:
#   docker-compose -f docker-compose.prod.yml up -d
#
# ============================================================================

services:
  # ðŸ”§ Backend API (FastAPI)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-dev
    container_name: opengristai-backend
    ports:
      - "8000:8000"
    environment:
      # OpenAI Configuration (required)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-https://api.openai.com/v1}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-mini}

      # LLM Settings (optional)
      LLM_TEMPERATURE: ${LLM_TEMPERATURE:-0.0}
      LLM_MAX_TOKENS: ${LLM_MAX_TOKENS:-}
      LLM_TIMEOUT: ${LLM_TIMEOUT:-60}
      LLM_MAX_RETRIES: ${LLM_MAX_RETRIES:-2}

      # Grist Configuration (optional - defaults to docs.getgrist.com)
      GRIST_BASE_URL: ${GRIST_BASE_URL:-https://docs.getgrist.com}

      # Agent Settings (optional)
      AGENT_MAX_ITERATIONS: ${AGENT_MAX_ITERATIONS:-15}
      AGENT_VERBOSE: ${AGENT_VERBOSE:-true}

      # Application
      ENVIRONMENT: ${ENVIRONMENT:-development}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}

      # CORS Configuration
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:5173,http://localhost:8000}

    volumes:
      - ./backend/app:/app/app
      - ./backend/tests:/app/tests
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000 --reload

  # ðŸŽ¨ Frontend Widget (SvelteKit) - Dev Mode Only
  frontend:
    image: node:18-alpine
    container_name: opengristai-frontend
    working_dir: /app
    ports:
      - "5173:5173"
    environment:
      PUBLIC_CHAT_URL: http://backend:8000/api/v1/chat
      NODE_ENV: development
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"