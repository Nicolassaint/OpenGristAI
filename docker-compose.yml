version: '3.8'

services:
  # üóÑÔ∏è Base de donn√©es PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: opengristai-postgres
    environment:
      POSTGRES_USER: grist_ai
      POSTGRES_PASSWORD: grist_ai_dev_password
      POSTGRES_DB: grist_ai_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grist_ai"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üîÑ Cache Redis
  redis:
    image: redis:7-alpine
    container_name: opengristai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # üîß Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: opengristai-backend
    ports:
      - "8000:8000"
    environment:
      # Database
      DATABASE_URL: postgresql://grist_ai:grist_ai_dev_password@postgres:5432/grist_ai_db

      # Redis
      REDIS_URL: redis://redis:6379/0

      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-https://api.openai.com/v1}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-mini}

      # Application
      ENVIRONMENT: development
      LOG_LEVEL: DEBUG

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/app:/app/app
      - ./backend/tests:/app/tests
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000 --reload

  # üé® Frontend Widget (SvelteKit)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: opengristai-frontend
    ports:
      - "5173:5173"
    environment:
      # Backend API URL
      PUBLIC_CHAT_URL: http://localhost:8000/api/v1/chat
      
      # Development
      NODE_ENV: development
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/static:/app/static
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
  redis_data: